nextflow_workflow {

    name "Test Workflow VCF_PED_RTGTOOLS"
    script "../main.nf"
    workflow "VCF_PED_RTGTOOLS"

    tag "subworkflows"
    tag "subworklows_local"
    tag "vcf_ped_rtgtools"

    test("vcf_ped_rtgtools - default") {

        when {
            params {
                add_ped = true
            }
            workflow {
                """
                input[0] = Channel.of([
                    [id:"Ashkenazim", family:"Ashkenazim", family_samples:"NA24143,NA24149,NA24385", caller:"haplotypecaller"],
                    file(params.famvcf, checkIfExists:true),
                    file(params.famtbi, checkIfExists:true)
                ])
                input[1] = Channel.of([
                    [id:"Ashkenazim", family:"Ashkenazim", family_samples:"NA24143,NA24149,NA24385", caller:"haplotypecaller"],
                    file(params.ped, checkIfExists:true)
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out.ped_vcfs.collect { [it[0], "variantsMD5:${path(it[1]).vcf.variantsMD5}"] }
                ).match() }
            )
        }

    }

}
