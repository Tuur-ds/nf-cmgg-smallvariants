nextflow_workflow {

    name "Test Workflow INPUT_SPLIT_BEDTOOLS"
    script "../main.nf"
    workflow "INPUT_SPLIT_BEDTOOLS"

    tag "subworkflows"
    tag "subworkflows_local"
    tag "input_split_bedtools"

    test("input_split_bedtools - default - crams") {

        when {
            workflow {
                """
                input[0] = Channel.of([
                    [id:"NA24143", sample:"NA24143", family:"Ashkenazim", family_samples:"NA24143"],
                    file(params.bed, checkIfExists:true),
                    3
                ])
                input[1] = Channel.of([
                    [id:"NA24143", sample:"NA24143", family:"Ashkenazim", family_samples:"NA24143"],
                    file(params.cram1, checkIfExists:true),
                    file(params.crai1, checkIfExists:true),
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                    workflow.out.split.collect { it.collect { it instanceof Map || it.endsWith(".bed") ? it : file(it).name } }
                ).match("default - crams") }
            )
        }

    }
}
